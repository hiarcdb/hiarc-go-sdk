/*
 * Hiarc API
 *
 * Welcome to the Hiarc API documentation.
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"os"
)

// CreateFile struct for CreateFile
type CreateFile struct {
	Request *EntityBase `json:"request,omitempty"`
	File **os.File `json:"file,omitempty"`
}

// NewCreateFile instantiates a new CreateFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFile() *CreateFile {
	this := CreateFile{}
	return &this
}

// NewCreateFileWithDefaults instantiates a new CreateFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFileWithDefaults() *CreateFile {
	this := CreateFile{}
	return &this
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *CreateFile) GetRequest() EntityBase {
	if o == nil || o.Request == nil {
		var ret EntityBase
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFile) GetRequestOk() (*EntityBase, bool) {
	if o == nil || o.Request == nil {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *CreateFile) HasRequest() bool {
	if o != nil && o.Request != nil {
		return true
	}

	return false
}

// SetRequest gets a reference to the given EntityBase and assigns it to the Request field.
func (o *CreateFile) SetRequest(v EntityBase) {
	o.Request = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *CreateFile) GetFile() *os.File {
	if o == nil || o.File == nil {
		var ret *os.File
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFile) GetFileOk() (**os.File, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *CreateFile) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given *os.File and assigns it to the File field.
func (o *CreateFile) SetFile(v *os.File) {
	o.File = &v
}

func (o CreateFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Request != nil {
		toSerialize["request"] = o.Request
	}
	if o.File != nil {
		toSerialize["file"] = o.File
	}
	return json.Marshal(toSerialize)
}

type NullableCreateFile struct {
	value *CreateFile
	isSet bool
}

func (v NullableCreateFile) Get() *CreateFile {
	return v.value
}

func (v *NullableCreateFile) Set(val *CreateFile) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFile) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFile(val *CreateFile) *NullableCreateFile {
	return &NullableCreateFile{value: val, isSet: true}
}

func (v NullableCreateFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
