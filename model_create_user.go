/*
 * Hiarc API
 *
 * Welcome to the Hiarc API documentation.
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// CreateUser struct for CreateUser
type CreateUser struct {
	EntityBase
}

// NewCreateUser instantiates a new CreateUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUser() *CreateUser {
	this := CreateUser{}
	return &this
}

// NewCreateUserWithDefaults instantiates a new CreateUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserWithDefaults() *CreateUser {
	this := CreateUser{}
	return &this
}

func (o CreateUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedEntityBase, errEntityBase := json.Marshal(o.EntityBase)
	if errEntityBase != nil {
		return []byte{}, errEntityBase
	}
	errEntityBase = json.Unmarshal([]byte(serializedEntityBase), &toSerialize)
	if errEntityBase != nil {
		return []byte{}, errEntityBase
	}
	return json.Marshal(toSerialize)
}

type NullableCreateUser struct {
	value *CreateUser
	isSet bool
}

func (v NullableCreateUser) Get() *CreateUser {
	return v.value
}

func (v *NullableCreateUser) Set(val *CreateUser) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUser) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUser(val *CreateUser) *NullableCreateUser {
	return &NullableCreateUser{value: val, isSet: true}
}

func (v NullableCreateUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
