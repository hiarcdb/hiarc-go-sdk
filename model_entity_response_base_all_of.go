/*
 * Hiarc API
 *
 * Welcome to the Hiarc API documentation.
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"time"
)

// EntityResponseBaseAllOf struct for EntityResponseBaseAllOf
type EntityResponseBaseAllOf struct {
	Type *string `json:"type,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	ModifiedAt *time.Time `json:"modifiedAt,omitempty"`
}

// NewEntityResponseBaseAllOf instantiates a new EntityResponseBaseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityResponseBaseAllOf() *EntityResponseBaseAllOf {
	this := EntityResponseBaseAllOf{}
	return &this
}

// NewEntityResponseBaseAllOfWithDefaults instantiates a new EntityResponseBaseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityResponseBaseAllOfWithDefaults() *EntityResponseBaseAllOf {
	this := EntityResponseBaseAllOf{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EntityResponseBaseAllOf) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityResponseBaseAllOf) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EntityResponseBaseAllOf) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EntityResponseBaseAllOf) SetType(v string) {
	o.Type = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *EntityResponseBaseAllOf) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityResponseBaseAllOf) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EntityResponseBaseAllOf) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *EntityResponseBaseAllOf) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *EntityResponseBaseAllOf) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityResponseBaseAllOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *EntityResponseBaseAllOf) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *EntityResponseBaseAllOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *EntityResponseBaseAllOf) GetModifiedAt() time.Time {
	if o == nil || o.ModifiedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityResponseBaseAllOf) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || o.ModifiedAt == nil {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *EntityResponseBaseAllOf) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt != nil {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *EntityResponseBaseAllOf) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

func (o EntityResponseBaseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.ModifiedAt != nil {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	return json.Marshal(toSerialize)
}

type NullableEntityResponseBaseAllOf struct {
	value *EntityResponseBaseAllOf
	isSet bool
}

func (v NullableEntityResponseBaseAllOf) Get() *EntityResponseBaseAllOf {
	return v.value
}

func (v *NullableEntityResponseBaseAllOf) Set(val *EntityResponseBaseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityResponseBaseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityResponseBaseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityResponseBaseAllOf(val *EntityResponseBaseAllOf) *NullableEntityResponseBaseAllOf {
	return &NullableEntityResponseBaseAllOf{value: val, isSet: true}
}

func (v NullableEntityResponseBaseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityResponseBaseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
